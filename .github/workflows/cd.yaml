name: CD PRODUCTION PIPELINE

on:
  workflow_run:
    workflows: [CI TEST]
    branches: [main]
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  NODE_VERSION: 18.x

jobs:
  install:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Begin CI...
        uses: actions/checkout@v2
      - name: Install pnpm
        uses: pnpm/action-setup@v2
      - name: Use Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          CI: true

  build:
    runs-on: ubuntu-latest
    needs: [install]

    steps:
      - name: Begin CI...
        uses: actions/checkout@v2
      - name: Install pnpm
        uses: pnpm/action-setup@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Build
        run: pnpm build
        env:
          CI: true

  deploy:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: SSH and deploy node app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /var/www/html/ulov/admin
            git pull
            export NODE_ENV=development
            pnpm install
            export NODE_ENV=production
            pnpm build
            rm -rf ./node_modules
